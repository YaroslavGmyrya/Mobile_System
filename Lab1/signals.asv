
%variables
step = 0.001;
t = 0 : step : 2-step;
f = 4;

%signal
y = my_signal(t, f);

%create and show plot
figure;
plot(t, y);
xlabel('t') 
ylabel('A')
title('Signal')
grid on

%sampling
Fs = 48;
t = 0 : 1/Fs : 1-(1/Fs);

samples = my_signal(t, f);

%DFT
F = fft(samples); 

amps = abs(F);

%create plot with samples
figure;
plot(t, samples);
hold on;
plot(0:step:-step, y);
xlabel('t');
ylabel('A');
title('Signal');
grid on;
legend("Original","Recovery signal")
hold off;

%create spectrum plot with samples
N = length(F);
f_axis = (0:N/2-1)*(Fs/N);
figure;
plot(f_axis,amps(1:N/2));
xlabel('f') 
ylabel('A')
title('Signal')

%Test ADC capacity
for ADC_capacity = 3:6

    max_value = 2^ADC_capacity - 1;
    
    samples = zeros(1, length(t));
    
    for k = 1:length(t)

        tmp = 50 * my_signal(t(k), f);

        if tmp > max_value
            samples(k) = max_value;
        else
            samples(k) = tmp;
        end

    end

    F = fft(samples);

    amps = abs(F);

    N = length(F);
    f_axis = (0:N/2-1)*(Fs/N);
    figure;
    plot(f_axis,amps(1:N/2));
    xlabel('f') 
    ylabel('A')
    title('Signal')


end



%my_ft vs matlab fft

my_ft_samples = my_ft(samples);
matlab_fft_samples = fft(samples);

frequences = [392, 392, 392, 311, 466, 392, 311, 466, 392,...
  587, 587, 587, 622, 466, 369, 311, 466, 392,...
  784, 392, 392, 784, 739, 698, 659, 622, 659,...
  415, 554, 523, 493, 466, 440, 466,...
  311, 369, 311, 466, 392];

durations = [
  350, 350, 350, 250, 100, 350, 250, 100, 700, ...
  350, 350, 350, 250, 100, 350, 250, 100, 700, ...
  350, 250, 100, 350, 250, 100, 100, 100, 450, ...
  150, 350, 250, 100, 100, 100, 450, ... 
  150, 350, 250, 100, 750
  ];

my_song = [];
fs = 44100;

 for k = 1:length(frequences)
        t = 0:1/fs:durations(k)/1000*1.75-1/fs;   
        tone = 1.5 * sin(2*pi*frequences(k)*t);    
        my_song = [my_song, tone];                  
end


audio = audioplayer(my_song,fs);

%play
play(audio); 



function y = my_signal(t, f)
    y = sin(12*pi*f.*t + pi/11) + sin(10*pi*f.*t);
end


function F = my_ft(samples)
    N = length(samples);
    F = zeros(N, 1);

    for x = 0 : N - 1
        sum = 0;
        for n = 0 : N - 1
            sum = sum + samples(n+1) * exp(-1j * 2 * pi * x * n/N);
        end

        F(x+1) = sum;
    end

end




